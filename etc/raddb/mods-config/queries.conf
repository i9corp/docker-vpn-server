sql_user_name = "%{Stripped-User-Name}"
client_query = "\
        SELECT id, nasname, shortname, type, secret, server \
        FROM ${client_table}"
authorize_check_query = "\
        SELECT id, UserName, Attribute, Value, Op \
        FROM ${authcheck_table} \
        WHERE Username = '%{SQL-User-Name}' \
        ORDER BY id"
authorize_reply_query = "\
        SELECT id, UserName, Attribute, Value, Op \
        FROM ${authreply_table} \
        WHERE Username = '%{SQL-User-Name}' \
        ORDER BY id"
authorize_group_check_query = "\
        SELECT id, GroupName, Attribute, Value, op \
        FROM ${groupcheck_table} \
        WHERE GroupName = '%{${group_attribute}}' \
        ORDER BY id"
authorize_group_reply_query = "\
        SELECT id, GroupName, Attribute, Value, op \
        FROM ${groupreply_table} \
        WHERE GroupName = '%{${group_attribute}}' \
        ORDER BY id"
simul_count_query = "\
        SELECT COUNT(*) \
        FROM ${acct_table1} \
        WHERE UserName='%{SQL-User-Name}' \
        AND AcctStopTime IS NULL"
simul_verify_query = "\
        SELECT RadAcctId, AcctSessionId, UserName, NASIPAddress, NASPortId, FramedIPAddress, CallingStationId, \
                FramedProtocol \
        FROM ${acct_table1} \
        WHERE UserName='%{SQL-User-Name}' \
        AND AcctStopTime IS NULL"
group_membership_query = "\
        SELECT GroupName \
        FROM ${usergroup_table} \
        WHERE UserName='%{SQL-User-Name}' \
        ORDER BY priority"
accounting {
        reference = "%{tolower:type.%{%{Acct-Status-Type}:-none}.query}"
        column_list = "\
                AcctSessionId, \
                AcctUniqueId, \
                UserName, \
                Realm, \
                NASIPAddress, \
                NASPortId, \
                NASPortType, \
                AcctStartTime, \
                AcctUpdateTime, \
                AcctStopTime, \
                AcctSessionTime, \
                AcctAuthentic, \
                ConnectInfo_start, \
                ConnectInfo_Stop, \
                AcctInputOctets, \
                AcctOutputOctets, \
                CalledStationId, \
                CallingStationId, \
                AcctTerminateCause, \
                ServiceType, \
                FramedProtocol, \
                FramedIpAddress"
        type {
                accounting-on {
                        query = "\
                                UPDATE ${....acct_table1} \
                                SET \
                                        AcctStopTime = TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        AcctUpdateTime = TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        AcctSessionTime = (%{integer:Event-Timestamp} - EXTRACT(EPOCH FROM(AcctStartTime))), \
                                        AcctTerminateCause = '%{%{Acct-Terminate-Cause}:-NAS-Reboot}' \
                                WHERE AcctStopTime IS NULL \
                                AND NASIPAddress= '%{%{NAS-IPv6-Address}:-%{NAS-IP-Address}}' \
                                AND AcctStartTime <= '%S'::timestamp"
                }
                accounting-off {
                        query = "${..accounting-on.query}"
                }
                start {
                        query = "\
                                INSERT INTO ${....acct_table1} \
                                        (${...column_list}) \
                                VALUES(\
                                        '%{Acct-Session-Id}', \
                                        '%{Acct-Unique-Session-Id}', \
                                        '%{SQL-User-Name}', \
                                        NULLIF('%{Realm}', ''), \
                                        '%{%{NAS-IPv6-Address}:-%{NAS-IP-Address}}', \
                                        NULLIF('%{%{NAS-Port-ID}:-%{NAS-Port}}', ''), \
                                        '%{NAS-Port-Type}', \
                                        TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        NULL, \
                                        0, \
                                        '%{Acct-Authentic}', \
                                        '%{Connect-Info}', \
                                        NULL, \
                                        0, \
                                        0, \
                                        '%{Called-Station-Id}', \
                                        '%{Calling-Station-Id}', \
                                        NULL, \
                                        '%{Service-Type}', \
                                        '%{Framed-Protocol}', \
                                        NULLIF('%{Framed-IP-Address}', '')::inet)"
                        query = "\
                                UPDATE ${....acct_table1} \
                                SET \
                                        AcctStartTime = TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        AcctUpdateTime = TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        ConnectInfo_start = '%{Connect-Info}' \
                                WHERE AcctUniqueId = '%{Acct-Unique-Session-Id}' \
                                AND AcctStopTime IS NULL"
                        query = "\
                                UPDATE ${....acct_table1} \
                                SET \
                                        AcctStartTime = TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        AcctUpdateTime = TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        ConnectInfo_start = '%{Connect-Info}' \
                                WHERE AcctUniqueId = '%{Acct-Unique-Session-Id}'"
                }
                interim-update {
                        query = "\
                                UPDATE ${....acct_table1} \
                                SET \
                                        FramedIPAddress = NULLIF('%{Framed-IP-Address}', '')::inet, \
                                        AcctSessionTime = %{%{Acct-Session-Time}:-NULL}, \
                                        AcctInterval = (%{integer:Event-Timestamp} - EXTRACT(EPOCH FROM (COALESCE(AcctUpdateTime, AcctStartTime)))), \
                                        AcctUpdateTime = TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        AcctInputOctets = (('%{%{Acct-Input-Gigawords}:-0}'::bigint << 32) + \
                                                '%{%{Acct-Input-Octets}:-0}'::bigint), \
                                        AcctOutputOctets = (('%{%{Acct-Output-Gigawords}:-0}'::bigint << 32) + \
                                                '%{%{Acct-Output-Octets}:-0}'::bigint) \
                                WHERE AcctUniqueId = '%{Acct-Unique-Session-Id}' \
                                AND AcctStopTime IS NULL"
                        query = "\
                                INSERT INTO ${....acct_table1} \
                                        (${...column_list}) \
                                VALUES(\
                                        '%{Acct-Session-Id}', \
                                        '%{Acct-Unique-Session-Id}', \
                                        '%{SQL-User-Name}', \
                                        NULLIF('%{Realm}', ''), \
                                        '%{%{NAS-IPv6-Address}:-%{NAS-IP-Address}}', \
                                        NULLIF('%{%{NAS-Port-ID}:-%{NAS-Port}}', ''), \
                                        '%{NAS-Port-Type}', \
                                        TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        NULL, \
                                        %{%{Acct-Session-Time}:-NULL}, \
                                        '%{Acct-Authentic}', \
                                        '%{Connect-Info}', \
                                        NULL, \
                                        (('%{%{Acct-Input-Gigawords}:-0}'::bigint << 32) + \
                                                '%{%{Acct-Input-Octets}:-0}'::bigint), \
                                        (('%{%{Acct-Output-Gigawords}:-0}'::bigint << 32) + \
                                                '%{%{Acct-Output-Octets}:-0}'::bigint), \
                                        '%{Called-Station-Id}', \
                                        '%{Calling-Station-Id}', \
                                        NULL, \
                                        '%{Service-Type}', \
                                        '%{Framed-Protocol}', \
                                        NULLIF('%{Framed-IP-Address}', '')::inet)"
                }
                stop {
                        query = "\
                                UPDATE ${....acct_table2} \
                                SET \
                                        AcctStopTime = TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        AcctUpdateTime = TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        AcctSessionTime = COALESCE(%{%{Acct-Session-Time}:-NULL}, \
                                                (%{integer:Event-Timestamp} - EXTRACT(EPOCH FROM(AcctStartTime)))), \
                                        AcctInputOctets = (('%{%{Acct-Input-Gigawords}:-0}'::bigint << 32) + \
                                                '%{%{Acct-Input-Octets}:-0}'::bigint), \
                                        AcctOutputOctets = (('%{%{Acct-Output-Gigawords}:-0}'::bigint << 32) + \
                                                '%{%{Acct-Output-Octets}:-0}'::bigint), \
                                        AcctTerminateCause = '%{Acct-Terminate-Cause}', \
                                        FramedIPAddress = NULLIF('%{Framed-IP-Address}', '')::inet, \
                                        ConnectInfo_stop = '%{Connect-Info}' \
                                WHERE AcctUniqueId = '%{Acct-Unique-Session-Id}' \
                                AND AcctStopTime IS NULL"
                        query = "\
                                INSERT INTO ${....acct_table1} \
                                        (${...column_list}) \
                                VALUES(\
                                        '%{Acct-Session-Id}', \
                                        '%{Acct-Unique-Session-Id}', \
                                        '%{SQL-User-Name}', \
                                        NULLIF('%{Realm}', ''), \
                                        '%{%{NAS-IPv6-Address}:-%{NAS-IP-Address}}', \
                                        NULLIF('%{%{NAS-Port-ID}:-%{NAS-Port}}', ''), \
                                        '%{NAS-Port-Type}', \
                                        TO_TIMESTAMP(%{integer:Event-Timestamp} - %{%{Acct-Session-Time}:-0}), \
                                        TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        NULLIF('%{Acct-Session-Time}', '')::bigint, \
                                        '%{Acct-Authentic}', \
                                        '%{Connect-Info}', \
                                        NULL, \
                                        (('%{%{Acct-Input-Gigawords}:-0}'::bigint << 32) + \
                                                '%{%{Acct-Input-Octets}:-0}'::bigint), \
                                        (('%{%{Acct-Output-Gigawords}:-0}'::bigint << 32) + \
                                                '%{%{Acct-Output-Octets}:-0}'::bigint), \
                                        '%{Called-Station-Id}', \
                                        '%{Calling-Station-Id}', \
                                        '%{Acct-Terminate-Cause}', \
                                        '%{Service-Type}', \
                                        '%{Framed-Protocol}', \
                                        NULLIF('%{Framed-IP-Address}', '')::inet)"
                        query = "\
                                UPDATE ${....acct_table2} \
                                SET \
                                        AcctStopTime = TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        AcctUpdateTime = TO_TIMESTAMP(%{integer:Event-Timestamp}), \
                                        AcctSessionTime = COALESCE(%{%{Acct-Session-Time}:-NULL}, \
                                                (%{integer:Event-Timestamp} - EXTRACT(EPOCH FROM(AcctStartTime)))), \
                                        AcctInputOctets = (('%{%{Acct-Input-Gigawords}:-0}'::bigint << 32) + \
                                                '%{%{Acct-Input-Octets}:-0}'::bigint), \
                                        AcctOutputOctets = (('%{%{Acct-Output-Gigawords}:-0}'::bigint << 32) + \
                                                '%{%{Acct-Output-Octets}:-0}'::bigint), \
                                        AcctTerminateCause = '%{Acct-Terminate-Cause}', \
                                        FramedIPAddress = NULLIF('%{Framed-IP-Address}', '')::inet, \
                                        ConnectInfo_stop = '%{Connect-Info}' \
                                WHERE AcctUniqueId = '%{Acct-Unique-Session-Id}'"
                }
                none {
                     query = "SELECT true"
                }
        }
}
post-auth {
        query = "\
                INSERT INTO ${..postauth_table} \
                        (username, pass, reply, authdate) \
                VALUES(\
                        '%{User-Name}', \
                        '%{%{User-Password}:-Chap-Password}', \
                        '%{reply:Packet-Type}', \
                        NOW())"
}
